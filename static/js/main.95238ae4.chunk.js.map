{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["uiConfig","signInFlow","callbacks","signInSuccessWithAuthResult","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","LoggedOutTemplate","css","marginTop","transform","firebaseAuth","user","a","firestore","collection","add","owner","uid","name","displayName","activeTask","deck","created","Timestamp","now","game","doc","set","window","location","search","id","CreateGameForm","onClick","createGame","average","nums","length","reduce","b","ScoreState","members","scores","scoreData","data","revealed","style","display","flexDirection","width","docs","map","isMe","fontWeight","Math","round","Object","values","filter","score","Game","gameDoc","slice","useDocument","gameLoading","useCollection","orderBy","tasks","tasksLoading","useState","newTask","setNewTask","membersLoading","points","setPoints","ticket","setTicket","activeTaskId","find","task","taskIndex","findIndex","console","log","color","ref","merge","placeholder","onChange","event","value","onKeyPress","e","key","currentTarget","idx","document","phabricatorGetEpic","tickets","t","fields","card","className","disabled","phabricatorSetPoints","match","p","parseInt","ticketId","App","useAuthState","gameId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialised","initFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95238ae4.chunk.js","sourcesContent":["import \"./App.css\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\nimport { useState } from \"react\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  signInFlow: \"popup\",\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  },\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport function LoggedOutTemplate() {\n  return (\n    <div css={{ marginTop: \"50vh\", transform: \"translateY(-50%)\" }}>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </div>\n  );\n}\n\nasync function createGame(user) {\n  const game = await firebase\n    .firestore()\n    .collection(\"game\")\n    .add({\n      owner: user.uid,\n      name: `${user.displayName}'s Planning Poker`,\n      activeTask: null,\n      deck: [1, 2, 3, 5, 8, 13, 21],\n      created: firebase.firestore.Timestamp.now(),\n    });\n  game.collection(\"members\").doc(user.uid).set({\n    name: user.displayName,\n  });\n  window.location.search = game.id;\n}\n\nexport function CreateGameForm({ user }) {\n  return (\n    <div>\n      <h1>Welcome, {user.displayName}!</h1>\n      <button onClick={() => createGame(user)}>Start a new game</button>\n    </div>\n  );\n}\n\nfunction average(nums) {\n  if (!nums.length) {\n    return 0;\n  }\n  return nums.reduce((a, b) => a + b) / nums.length;\n}\n\nfunction ScoreState({ game, user, activeTask, members, scores }) {\n  const scoreData = (scores ? scores.data() : null) || {};\n  const revealed = activeTask.data().revealed;\n  if (!members) {\n    return;\n  }\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", width: \"20vw\" }}>\n      <div>\n        {members.docs.map((doc) => {\n          const isMe = user.uid === doc.id;\n          return (\n            <div style={isMe ? { fontWeight: \"bold\" } : {}}>\n              {doc.data().name}{\" \"}\n              {isMe && scoreData\n                ? scoreData[user.uid]\n                : revealed\n                ? scoreData[doc.id]\n                : scoreData[doc.id]\n                ? \"✔️\"\n                : \"\"}\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        {revealed ? (\n          <>\n            Average:{\" \"}\n            {Math.round(\n              average(Object.values(scoreData).filter((score) => score !== \"?\"))\n            )}\n          </>\n        ) : (\n          <>\n            {Object.values(scoreData).length}/{members.docs.length} Responses\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function Game({ user }) {\n  const gameDoc = firebase\n    .firestore()\n    .collection(\"game\")\n    .doc(window.location.search.slice(1));\n  const [game, gameLoading] = useDocument(gameDoc);\n  const [tasks, tasksLoading] = useCollection(\n    gameDoc.collection(\"tasks\").orderBy(\"idx\")\n  );\n  const [newTask, setNewTask] = useState(\"\");\n  const [members, membersLoading] = useCollection(\n    gameDoc.collection(\"members\")\n  );\n  const [points, setPoints] = useState();\n  const [ticket, setTicket] = useState(\"\");\n  const [scores] = useCollection(\n    gameDoc.collection(\"scores\").doc(game?.data().activeTask)\n  );\n  if (gameLoading || tasksLoading || membersLoading) {\n    return null;\n  }\n  const activeTaskId = game.data().activeTask;\n  const activeTask =\n    activeTaskId && !tasksLoading\n      ? tasks.docs.find((task) => task.id === activeTaskId)\n      : null;\n  const taskIndex = tasks.docs.findIndex((task) => task.id === activeTaskId);\n  console.log(ticket);\n  if (members.docs.find((doc) => doc.id === user.uid)) {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <div style={{ width: \"20vw\" }}>\n          <h1>Tasks</h1>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {tasks\n              ? tasks.docs.map((doc) => (\n                  <div\n                    style={\n                      activeTaskId === doc.id\n                        ? { fontWeight: \"bold\" }\n                        : { color: \"grey\" }\n                    }\n                    onClick={() => {\n                      game.ref.set({ activeTask: doc.id }, { merge: true });\n                    }}\n                  >\n                    {doc.data().name}\n                  </div>\n                ))\n              : null}\n            <input\n              placeholder=\"+ Add Task\"\n              onChange={(event) => setNewTask(event.value)}\n              value={newTask}\n              onKeyPress={async (e) => {\n                if (e.key === \"Enter\") {\n                  await gameDoc.collection(\"tasks\").add({\n                    name: e.currentTarget.value,\n                    revealed: false,\n                    idx: tasks.docs.length,\n                  });\n                  setNewTask(\"\");\n                }\n              }}\n            ></input>\n            {document.phabricatorGetEpic ? (\n              <div>\n                <input\n                  placeholder=\"Ticket\"\n                  value={ticket}\n                  onChange={(e) => setTicket(e.currentTarget.value)}\n                ></input>\n                <button\n                  onClick={async () => {\n                    console.log(ticket);\n                    const tickets = await document.phabricatorGetEpic(ticket);\n                    let idx = tasks.docs.length;\n                    for (const t of tickets) {\n                      await gameDoc.collection(\"tasks\").add({\n                        name: `T${t.id}: ${t.fields.name}`,\n                        revealed: false,\n                        idx: idx++,\n                      });\n                    }\n                    setTicket(\"\");\n                  }}\n                >\n                  Load Epic\n                </button>\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"60vw\",\n          }}\n        >\n          {activeTask ? (\n            <>\n              <h1>{activeTask.data().name}</h1>\n              <div>\n                {[...game.data().deck, \"?\"].map((card) => (\n                  <button\n                    className=\"Card\"\n                    onClick={() => {\n                      game.ref\n                        .collection(\"scores\")\n                        .doc(activeTaskId)\n                        .set(\n                          {\n                            [user.uid]: card,\n                          },\n                          { merge: true }\n                        );\n                    }}\n                  >\n                    {card}\n                  </button>\n                ))}\n              </div>\n              <div>\n                {activeTask.data().revealed &&\n                game.data().owner === user.uid ? (\n                  <div>\n                    <button\n                      onClick={() => {\n                        activeTask.ref.set(\n                          { revealed: false },\n                          { merge: true }\n                        );\n                      }}\n                    >\n                      Hide\n                    </button>\n                    <button\n                      disabled={taskIndex === tasks.docs.length - 1}\n                      onClick={() => {\n                        game.ref.set(\n                          { activeTask: tasks.docs[taskIndex + 1].id },\n                          { merge: true }\n                        );\n                      }}\n                    >\n                      Next\n                    </button>\n                  </div>\n                ) : (\n                  <div>\n                    <button\n                      disabled={taskIndex === tasks.docs.length - 1}\n                      onClick={() => {\n                        game.ref.set(\n                          { activeTask: tasks.docs[taskIndex + 1].id },\n                          { merge: true }\n                        );\n                      }}\n                    >\n                      Skip\n                    </button>\n                    <button\n                      onClick={() => {\n                        activeTask.ref.set({ revealed: true }, { merge: true });\n                        setPoints(\n                          Math.round(\n                            average(\n                              Object.values(scores.data()).filter(\n                                (score) => score !== \"?\"\n                              )\n                            )\n                          )\n                        );\n                      }}\n                    >\n                      Reveal\n                    </button>\n                  </div>\n                )}\n                {document.phabricatorSetPoints &&\n                activeTask &&\n                activeTask.data().name.match(/^T\\d+/) ? (\n                  <div>\n                    <input\n                      placeholder=\"Points\"\n                      value={points}\n                      onChange={(e) => setPoints(e.currentTarget.value)}\n                    ></input>\n                    <button\n                      onClick={async () => {\n                        const p = parseInt(points);\n                        const ticketId = parseInt(\n                          activeTask.data().name.match(/^T(\\d+)/)[1]\n                        );\n                        await document.phabricatorSetPoints(ticketId, p);\n                        setPoints(\"\");\n                      }}\n                    >\n                      Set Points\n                    </button>\n                  </div>\n                ) : null}\n              </div>\n            </>\n          ) : (\n            <button\n              disabled={tasksLoading || !tasks.docs.length}\n              onClick={() =>\n                game.ref.set({ activeTask: tasks.docs[0].id }, { merge: true })\n              }\n            >\n              Start Game\n            </button>\n          )}\n        </div>\n        {activeTask ? (\n          <ScoreState\n            game={game}\n            user={user}\n            activeTask={activeTask}\n            members={membersLoading ? null : members}\n            scores={scores}\n          />\n        ) : null}\n      </div>\n    );\n  } else {\n    return (\n      <button\n        onClick={() =>\n          gameDoc.collection(\"members\").doc(user.uid).set({\n            name: user.displayName,\n          })\n        }\n      >\n        Join Session\n      </button>\n    );\n  }\n}\n\nfunction App() {\n  const [user] = useAuthState(firebase.auth());\n  const gameId = window.location.search\n    ? window.location.search.slice(1)\n    : null;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {user ? (\n          gameId ? (\n            <Game id={gameId} user={user} />\n          ) : (\n            <CreateGameForm user={user} />\n          )\n        ) : (\n          <LoggedOutTemplate />\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase\";\n\nlet initialised = false;\n\nexport function initFirebase() {\n  if (initialised) {\n    return;\n  }\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDd-g1pxYDd5wiI-8aRLKO7k0hpIA2ogO0\",\n    authDomain: \"planning-poker-27ef5.firebaseapp.com\",\n    databaseURL: \"https://planning-poker-27ef5.firebaseio.com\",\n    projectId: \"planning-poker-27ef5\",\n    storageBucket: \"planning-poker-27ef5.appspot.com\",\n    messagingSenderId: \"359210422354\",\n    appId: \"1:359210422354:web:32c9e1671ff01dddb68f8b\",\n  };\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  initialised = true;\n}\n\ninitFirebase();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}