{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["uiConfig","signInFlow","callbacks","signInSuccessWithAuthResult","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","LoggedOutTemplate","css","marginTop","transform","firebaseAuth","user","a","firestore","collection","add","owner","uid","name","displayName","activeTask","deck","created","Timestamp","now","game","doc","set","window","location","search","id","CreateGameForm","onClick","createGame","ScoreState","nums","members","useCollection","ref","scores","scoresLoading","scoreData","data","revealed","style","display","flexDirection","docs","map","isMe","fontWeight","Object","values","filter","score","length","reduce","b","Game","gameDoc","slice","useDocument","gameLoading","orderBy","tasks","tasksLoading","useState","newTask","setNewTask","membersLoading","activeTaskId","find","task","taskIndex","findIndex","merge","placeholder","onChange","event","value","onKeyPress","e","key","currentTarget","idx","card","disabled","App","useAuthState","gameId","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialised","initFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d18f6912.chunk.js","sourcesContent":["import \"./App.css\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\nimport { useState } from \"react\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  signInFlow: \"popup\",\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  },\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport function LoggedOutTemplate() {\n  return (\n    <div css={{ marginTop: \"50vh\", transform: \"translateY(-50%)\" }}>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </div>\n  );\n}\n\nasync function createGame(user) {\n  const game = await firebase\n    .firestore()\n    .collection(\"game\")\n    .add({\n      owner: user.uid,\n      name: `${user.displayName}'s Planning Poker`,\n      activeTask: null,\n      deck: [1, 2, 3, 5, 8, 13, 21],\n      created: firebase.firestore.Timestamp.now(),\n    });\n  game.collection(\"members\").doc(user.uid).set({\n    name: user.displayName,\n  });\n  window.location.search = game.id;\n}\n\nexport function CreateGameForm({ user }) {\n  return (\n    <div>\n      <h1>Welcome, {user.displayName}!</h1>\n      <button onClick={() => createGame(user)}>Start a new game</button>\n    </div>\n  );\n}\n\nfunction average(nums) {\n  if (!nums.length) {\n    return 0;\n  }\n  return nums.reduce((a, b) => a + b) / nums.length;\n}\n\nfunction ScoreState({ game, user, activeTask, members }) {\n  const [scores, scoresLoading] = useCollection(\n    game.ref.collection(\"scores\").doc(activeTask.id)\n  );\n  const scoreData = scoresLoading ? {} : scores.data() || {};\n  const revealed = activeTask.data().revealed;\n  if (!members) {\n    return;\n  }\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <div>\n        {members.docs.map((doc) => {\n          const isMe = user.uid === doc.id;\n          return (\n            <div style={isMe ? { fontWeight: \"bold\" } : {}}>\n              {doc.data().name}{\" \"}\n              {isMe && scoreData && !scoresLoading\n                ? scoreData[user.uid]\n                : revealed\n                ? scoreData[doc.id]\n                : scoreData[doc.id]\n                ? \"✔️\"\n                : \"\"}\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        {revealed ? (\n          <>\n            Average:{\" \"}\n            {average(Object.values(scoreData).filter((score) => score !== \"?\"))}\n          </>\n        ) : (\n          <>\n            {Object.values(scoreData).length}/{members.docs.length} Responses\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function Game({ user }) {\n  const gameDoc = firebase\n    .firestore()\n    .collection(\"game\")\n    .doc(window.location.search.slice(1));\n  const [game, gameLoading] = useDocument(gameDoc);\n  const [tasks, tasksLoading] = useCollection(\n    gameDoc.collection(\"tasks\").orderBy(\"idx\")\n  );\n  const [newTask, setNewTask] = useState(\"\");\n  const [members, membersLoading] = useCollection(\n    gameDoc.collection(\"members\")\n  );\n  if (gameLoading || tasksLoading || membersLoading) {\n    return null;\n  }\n  const activeTaskId = game.data().activeTask;\n  const activeTask =\n    activeTaskId && !tasksLoading\n      ? tasks.docs.find((task) => task.id === activeTaskId)\n      : null;\n  const taskIndex = tasks.docs.findIndex((task) => task.id === activeTaskId);\n  if (members.docs.find((doc) => doc.id === user.uid)) {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <h1>Tasks</h1>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {tasks\n              ? tasks.docs.map((doc) => (\n                  <div\n                    onClick={() => {\n                      game.ref.set({ activeTask: doc.id }, { merge: true });\n                    }}\n                  >\n                    {doc.data().name}\n                  </div>\n                ))\n              : null}\n            <input\n              placeholder=\"+ Add Task\"\n              onChange={(event) => setNewTask(event.value)}\n              value={newTask}\n              onKeyPress={async (e) => {\n                if (e.key === \"Enter\") {\n                  await gameDoc.collection(\"tasks\").add({\n                    name: e.currentTarget.value,\n                    revealed: false,\n                    idx: tasks.docs.length,\n                  });\n                  setNewTask(\"\");\n                }\n              }}\n            ></input>\n          </div>\n        </div>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          {activeTask ? (\n            <>\n              <h1>{activeTask.data().name}</h1>\n              <div>\n                {[...game.data().deck, \"?\"].map((card) => (\n                  <button\n                    onClick={() => {\n                      game.ref\n                        .collection(\"scores\")\n                        .doc(activeTaskId)\n                        .set(\n                          {\n                            [user.uid]: card,\n                          },\n                          { merge: true }\n                        );\n                    }}\n                  >\n                    {card}\n                  </button>\n                ))}\n              </div>\n              {activeTask.data().revealed ? (\n                <div>\n                  <button\n                    onClick={() =>\n                      activeTask.ref.set({ revealed: false }, { merge: true })\n                    }\n                  >\n                    Hide\n                  </button>\n                  <button\n                    disabled={taskIndex === tasks.docs.length - 1}\n                    onClick={() => {\n                      game.ref.set(\n                        { activeTask: tasks.docs[taskIndex + 1].id },\n                        { merge: true }\n                      );\n                    }}\n                  >\n                    Next\n                  </button>\n                </div>\n              ) : (\n                <div>\n                  <button\n                    disabled={taskIndex === tasks.docs.length - 1}\n                    onClick={() => {\n                      game.ref.set(\n                        { activeTask: tasks.docs[taskIndex + 1].id },\n                        { merge: true }\n                      );\n                    }}\n                  >\n                    Skip\n                  </button>\n                  <button\n                    onClick={() =>\n                      activeTask.ref.set({ revealed: true }, { merge: true })\n                    }\n                  >\n                    Reveal\n                  </button>{\" \"}\n                </div>\n              )}\n            </>\n          ) : (\n            <button\n              disabled={tasksLoading || !tasks.docs.length}\n              onClick={() =>\n                game.ref.set({ activeTask: tasks.docs[0].id }, { merge: true })\n              }\n            >\n              Start Game\n            </button>\n          )}\n        </div>\n        {activeTask ? (\n          <ScoreState\n            game={game}\n            user={user}\n            activeTask={activeTask}\n            members={membersLoading ? null : members}\n          />\n        ) : null}\n      </div>\n    );\n  } else {\n    return (\n      <button\n        onClick={() =>\n          gameDoc.collection(\"members\").doc(user.uid).set({\n            name: user.displayName,\n          })\n        }\n      >\n        Join Session\n      </button>\n    );\n  }\n}\n\nfunction App() {\n  const [user] = useAuthState(firebase.auth());\n  const gameId = window.location.search\n    ? window.location.search.slice(1)\n    : null;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {user ? (\n          gameId ? (\n            <Game id={gameId} user={user} />\n          ) : (\n            <CreateGameForm user={user} />\n          )\n        ) : (\n          <LoggedOutTemplate />\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase\";\n\nlet initialised = false;\n\nexport function initFirebase() {\n  if (initialised) {\n    return;\n  }\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDd-g1pxYDd5wiI-8aRLKO7k0hpIA2ogO0\",\n    authDomain: \"planning-poker-27ef5.firebaseapp.com\",\n    databaseURL: \"https://planning-poker-27ef5.firebaseio.com\",\n    projectId: \"planning-poker-27ef5\",\n    storageBucket: \"planning-poker-27ef5.appspot.com\",\n    messagingSenderId: \"359210422354\",\n    appId: \"1:359210422354:web:32c9e1671ff01dddb68f8b\",\n  };\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  initialised = true;\n}\n\ninitFirebase();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}