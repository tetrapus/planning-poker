{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["uiConfig","signInFlow","callbacks","signInSuccessWithAuthResult","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","LoggedOutTemplate","style","marginTop","transform","flexGrow","margin","firebaseAuth","createGame","user","freestyle","a","firestore","collection","add","owner","uid","name","displayName","activeTask","deck","created","Timestamp","now","game","doc","set","window","location","search","id","CreateGameForm","useCollection","orderBy","limit","games","onClick","className","docs","map","data","toDate","toLocaleString","average","nums","length","reduce","b","ScoreState","members","scores","scoreData","revealed","display","flexDirection","width","fontSize","isMe","fontWeight","marginRight","Math","round","Object","values","filter","score","Game","gameDoc","slice","useDocument","gameLoading","tasks","tasksLoading","useState","newTask","setNewTask","membersLoading","points","setPoints","ticket","setTicket","allScores","allScoresLoading","activeTaskId","find","task","taskIndex","findIndex","console","log","backgroundColor","color","ref","merge","placeholder","onChange","event","value","onKeyPress","e","key","currentTarget","idx","document","phabricatorGetEpic","pattern","type","checkValidity","tickets","t","fields","background","height","padding","card","parseInt","disabled","phabricatorSetPoints","match","p","ticketId","minHeight","Interface","settingsDoc","settings","darkMode","position","right","bottom","App","useAuthState","gameId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialised","initFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eeacc838.chunk.js","sourcesContent":["import \"./App.css\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\nimport { useState } from \"react\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  signInFlow: \"popup\",\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  },\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n};\n\nexport function LoggedOutTemplate() {\n  return (\n    <div\n      style={{\n        marginTop: \"50vh\",\n        transform: \"translateY(-100%)\",\n        flexGrow: 1,\n        margin: \"auto\",\n      }}\n    >\n      <h1>Planning Poker</h1>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </div>\n  );\n}\n\nasync function createGame(user, freestyle) {\n  const game = await firebase\n    .firestore()\n    .collection(\"game\")\n    .add({\n      owner: user.uid,\n      name: `${user.displayName}'s Planning Poker`,\n      activeTask: null,\n      deck: freestyle ? null : [1, 2, 3, 5, 8, 13, 21],\n      created: firebase.firestore.Timestamp.now(),\n    });\n  game.collection(\"members\").doc(user.uid).set({\n    name: user.displayName,\n  });\n  window.location.search = game.id;\n}\n\nexport function CreateGameForm({ user }) {\n  const [games] = useCollection(\n    firebase.firestore().collection(\"game\").orderBy(\"created\", \"desc\").limit(10)\n  );\n  return (\n    <div style={{ margin: \"auto\" }}>\n      <h1>Welcome, {user.displayName}!</h1>\n      <button onClick={() => createGame(user, false)}>Start a new game</button>\n      <button className=\"Secondary\" onClick={() => createGame(user, true)}>\n        Freestyle\n      </button>\n      <h2>Join Game</h2>\n      <div>\n        {games\n          ? games.docs.map((game) => (\n              <div\n                onClick={() => (window.location.search = game.id)}\n                className=\"GameEntry\"\n              >\n                {game.data().name} (\n                {game.data().created.toDate().toLocaleString()})\n              </div>\n            ))\n          : null}\n      </div>\n    </div>\n  );\n}\n\nfunction average(nums) {\n  if (!nums.length) {\n    return 0;\n  }\n  return nums.reduce((a, b) => a + b) / nums.length;\n}\n\nfunction ScoreState({ game, user, activeTask, members, scores }) {\n  const scoreData = (scores ? scores.data() : null) || {};\n  const revealed = activeTask.data().revealed;\n  if (!members) {\n    return;\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"20vw\",\n        fontSize: \"18px\",\n      }}\n    >\n      <div>\n        {members.docs.map((doc) => {\n          const isMe = user.uid === doc.id;\n          return (\n            <div\n              style={{\n                ...(isMe ? { fontWeight: \"bold\" } : {}),\n                ...{ margin: \"8px 12px\", display: \"flex\" },\n              }}\n            >\n              <div style={{ marginRight: \"auto\" }}>{doc.data().name} </div>\n              <div>\n                {isMe && scoreData\n                  ? scoreData[user.uid]\n                  : revealed\n                  ? scoreData[doc.id]\n                  : scoreData[doc.id]\n                  ? \"✔️\"\n                  : \"\"}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        {revealed ? (\n          <>\n            Average:{\" \"}\n            {Math.round(\n              average(Object.values(scoreData).filter((score) => score !== \"?\"))\n            )}\n          </>\n        ) : (\n          <>\n            {Object.values(scoreData).length}/{members.docs.length} Responses\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function Game({ user }) {\n  const gameDoc = firebase\n    .firestore()\n    .collection(\"game\")\n    .doc(window.location.search.slice(1));\n  const [game, gameLoading] = useDocument(gameDoc);\n  const [tasks, tasksLoading] = useCollection(\n    gameDoc.collection(\"tasks\").orderBy(\"idx\")\n  );\n  const [newTask, setNewTask] = useState(\"\");\n  const [members, membersLoading] = useCollection(\n    gameDoc.collection(\"members\")\n  );\n  const [points, setPoints] = useState();\n  const [ticket, setTicket] = useState(\"\");\n  const [allScores, allScoresLoading] = useCollection(\n    gameDoc.collection(\"scores\")\n  );\n  if (gameLoading || tasksLoading || membersLoading) {\n    return null;\n  }\n  const activeTaskId = game.data().activeTask;\n  const activeTask =\n    activeTaskId && !tasksLoading\n      ? tasks.docs.find((task) => task.id === activeTaskId)\n      : null;\n  const scores = allScoresLoading\n    ? null\n    : allScores.docs.find((doc) => doc.id === activeTaskId);\n\n  const taskIndex = tasks.docs.findIndex((task) => task.id === activeTaskId);\n  console.log(ticket);\n  if (members.docs.find((doc) => doc.id === user.uid)) {\n    return (\n      <div style={{ display: \"flex\", backgroundColor: \"#f0f0f0\" }}>\n        <div style={{ width: \"20vw\" }}>\n          <h1>Tasks</h1>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {tasks\n              ? tasks.docs.map((doc) => (\n                  <div\n                    style={\n                      activeTaskId === doc.id\n                        ? { fontWeight: \"bold\" }\n                        : { color: \"grey\" }\n                    }\n                    onClick={() => {\n                      game.ref.set({ activeTask: doc.id }, { merge: true });\n                    }}\n                    className=\"TaskEntry\"\n                  >\n                    {doc.data().name}\n                  </div>\n                ))\n              : null}\n            <input\n              placeholder=\"+ Add Task\"\n              onChange={(event) => setNewTask(event.value)}\n              value={newTask}\n              style={{ marginTop: 16 }}\n              onKeyPress={async (e) => {\n                if (e.key === \"Enter\") {\n                  await gameDoc.collection(\"tasks\").add({\n                    name: e.currentTarget.value,\n                    revealed: false,\n                    idx: tasks.docs.length,\n                  });\n                  setNewTask(\"\");\n                }\n              }}\n            ></input>\n            {document.phabricatorGetEpic ? (\n              <input\n                placeholder=\"Ticket\"\n                value={ticket}\n                onChange={(e) => setTicket(e.currentTarget.value)}\n                pattern=\"T\\d+\"\n                type=\"text\"\n                onKeyPress={async (e) => {\n                  if (e.key === \"Enter\" && e.currentTarget.checkValidity()) {\n                    const tickets = await document.phabricatorGetEpic(ticket);\n                    let idx = tasks.docs.length;\n                    for (const t of tickets) {\n                      await gameDoc.collection(\"tasks\").add({\n                        name: `T${t.id}: ${t.fields.name}`,\n                        revealed: false,\n                        idx: idx++,\n                      });\n                    }\n                    setTicket(\"\");\n                  }\n                }}\n              ></input>\n            ) : null}\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"60vw\",\n            background: \"white\",\n            height: \"auto\",\n          }}\n        >\n          {activeTask ? (\n            <>\n              <h1 style={{ padding: \"38px\" }}>{activeTask.data().name}</h1>\n              <div style={{ margin: \"32px\" }}>\n                {game.data().deck ? (\n                  [...game.data().deck, \"?\"].map((card) => {\n                    return (\n                      <button\n                        className={`Card ${\n                          scores &&\n                          scores.data() &&\n                          card === scores.data()[user.uid]\n                            ? \"SelectedCard\"\n                            : \"\"\n                        }`}\n                        onClick={() => {\n                          game.ref\n                            .collection(\"scores\")\n                            .doc(activeTaskId)\n                            .set(\n                              {\n                                [user.uid]: card,\n                              },\n                              { merge: true }\n                            );\n                        }}\n                      >\n                        {card}\n                      </button>\n                    );\n                  })\n                ) : (\n                  <input\n                    placeholder=\"Score\"\n                    pattern=\"\\d+\"\n                    onKeyPress={async (e) => {\n                      if (\n                        e.key === \"Enter\" &&\n                        e.currentTarget.checkValidity()\n                      ) {\n                        game.ref\n                          .collection(\"scores\")\n                          .doc(activeTaskId)\n                          .set(\n                            {\n                              [user.uid]: parseInt(e.currentTarget.value),\n                            },\n                            { merge: true }\n                          );\n                      }\n                    }}\n                  ></input>\n                )}\n              </div>\n              <div>\n                {activeTask.data().revealed &&\n                game.data().owner === user.uid ? (\n                  <div>\n                    <button\n                      onClick={() => {\n                        activeTask.ref.set(\n                          { revealed: false },\n                          { merge: true }\n                        );\n                      }}\n                      className=\"Secondary\"\n                    >\n                      Hide\n                    </button>\n                    <button\n                      disabled={taskIndex === tasks.docs.length - 1}\n                      onClick={() => {\n                        game.ref.set(\n                          { activeTask: tasks.docs[taskIndex + 1].id },\n                          { merge: true }\n                        );\n                      }}\n                    >\n                      Next\n                    </button>\n                  </div>\n                ) : (\n                  <div>\n                    <button\n                      disabled={taskIndex === tasks.docs.length - 1}\n                      onClick={() => {\n                        game.ref.set(\n                          { activeTask: tasks.docs[taskIndex + 1].id },\n                          { merge: true }\n                        );\n                      }}\n                      className=\"Secondary\"\n                    >\n                      Skip\n                    </button>\n                    <button\n                      onClick={() => {\n                        activeTask.ref.set({ revealed: true }, { merge: true });\n                        setPoints(\n                          scores\n                            ? Math.round(\n                                average(\n                                  Object.values(scores.data()).filter(\n                                    (score) => score !== \"?\"\n                                  )\n                                )\n                              )\n                            : 0\n                        );\n                      }}\n                    >\n                      Reveal\n                    </button>\n                  </div>\n                )}\n                {document.phabricatorSetPoints &&\n                activeTask &&\n                activeTask.data().name.match(/^T\\d+/) ? (\n                  <div style={{ marginTop: \"32px\" }}>\n                    <input\n                      placeholder=\"Points\"\n                      value={points}\n                      onChange={(e) => setPoints(e.currentTarget.value)}\n                    ></input>\n                    <button\n                      onClick={async () => {\n                        const p = parseInt(points);\n                        const ticketId = parseInt(\n                          activeTask.data().name.match(/^T(\\d+)/)[1]\n                        );\n                        await document.phabricatorSetPoints(ticketId, p);\n                        setPoints(\"\");\n                      }}\n                      className=\"InputButton\"\n                    >\n                      Set Points\n                    </button>\n                  </div>\n                ) : null}\n              </div>\n            </>\n          ) : (\n            <button\n              disabled={tasksLoading || !tasks.docs.length}\n              onClick={() =>\n                game.ref.set({ activeTask: tasks.docs[0].id }, { merge: true })\n              }\n            >\n              Start Game\n            </button>\n          )}\n        </div>\n        {activeTask ? (\n          <ScoreState\n            game={game}\n            user={user}\n            activeTask={activeTask}\n            members={membersLoading ? null : members}\n            scores={scores}\n          />\n        ) : null}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          minHeight: \"100vh\",\n        }}\n      >\n        <button\n          onClick={() =>\n            gameDoc.collection(\"members\").doc(user.uid).set({\n              name: user.displayName,\n            })\n          }\n          style={{ transform: \"translateY(-100%)\", margin: \"auto\" }}\n        >\n          Join Session\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction Interface({ id, user }) {\n  const settingsDoc = firebase.firestore().collection(\"settings\").doc(user.uid);\n  const [settings] = useCollection(settingsDoc);\n  const darkMode = settings?.data()?.darkMode;\n  return (\n    <div\n      style={{\n        ...(darkMode ? { filter: \"invert(0.95)\" } : {}),\n        ...{ display: \"flex\", flexGrow: 1, background: \"white\" },\n      }}\n    >\n      {id ? <Game id={id} user={user} /> : <CreateGameForm user={user} />}\n      <button\n        className=\"Secondary\"\n        style={{ position: \"absolute\", right: 0, bottom: 0, color: \"grey\" }}\n        onClick={() => {\n          settingsDoc.set({ darkMode: !darkMode }, { merge: true });\n        }}\n      >\n        {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n      </button>\n    </div>\n  );\n}\n\nfunction App() {\n  const [user] = useAuthState(firebase.auth());\n  const gameId = window.location.search\n    ? window.location.search.slice(1)\n    : null;\n  return (\n    <div className=\"App\">\n      {user ? <Interface id={gameId} user={user} /> : <LoggedOutTemplate />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport firebase from \"firebase\";\n\nlet initialised = false;\n\nexport function initFirebase() {\n  if (initialised) {\n    return;\n  }\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDd-g1pxYDd5wiI-8aRLKO7k0hpIA2ogO0\",\n    authDomain: \"planning-poker-27ef5.firebaseapp.com\",\n    databaseURL: \"https://planning-poker-27ef5.firebaseio.com\",\n    projectId: \"planning-poker-27ef5\",\n    storageBucket: \"planning-poker-27ef5.appspot.com\",\n    messagingSenderId: \"359210422354\",\n    appId: \"1:359210422354:web:32c9e1671ff01dddb68f8b\",\n  };\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  initialised = true;\n}\n\ninitFirebase();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}